#!/usr/bin/python
# -*- coding: utf-8 -*-
import tkinter
from tkinter import *
from tkinter import messagebox
options = [("Convert decimal number", 1), ("Representation of negative numbers in 8-bit", 2), ("Decimal color code to RGB", 3), ("RGB color code to decimal", 4)]
    
    
def select():
    l = option.get()
    if l == 1:
        sel.config(text="Chosen: Convert decimal number")
        syst = StringVar()
        syst_label = Label(text="Type the number system (2,8,10,16):")      
        syst_label.grid(row=0, column=10, sticky="w")
        syst_entry = Entry(textvariable=syst)
        syst_entry.grid(row=0,column=15, padx=5, pady=5)  
        sysf = StringVar()
        sysf_label = Label(text="Type the final number system (2,8,10,16):")      
        sysf_label.grid(row=0, column=16, sticky="w")
        sysf_entry = Entry(textvariable=name)
        sysf_entry.grid(row=0,column=22, padx=5, pady=5)  
   
    elif l == 2:
        sel.config(text="Chosen: Representation of negative numbers in 8-bit")
    elif l == 3:
        sel.config(text="Chosen: Decimal color code to RGB")
    elif l == 4:
        sel.config(text="Chosen: RGB color code to decimal")
    
root = Tk()
root.title("Data Representation Calculator")
root.geometry("1980x720")

header = Label(text="Choose option", padx=15, pady=10)
header.grid(row=0, column=0, sticky=W)
   
option = IntVar()
    
row = 1
for txt, val in options:
    Radiobutton(text=txt, value=val, variable=option, padx=15, pady=10, command=select)\
        .grid(row=row, sticky=W)
    row += 1
    
sel = Label(padx=15, pady=10)
sel.grid(row=row, sticky=W)
    
def display_full_name():
    messagebox.showinfo("ggg", name.get())
    
name = StringVar()
name_label = Label(text="Введите число:")      
name_label.grid(row=0, column=2, sticky="w")
name_entry = Entry(textvariable=name)
name_entry.grid(row=0,column=7, padx=5, pady=5)      
    
    
message_button = Button(text="Click Me", command=display_full_name)
message_button.grid(row=2,column=1, padx=5, pady=5, sticky="e")
    
    
root.mainloop()
